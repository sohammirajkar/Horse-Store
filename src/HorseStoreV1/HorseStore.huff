//60008060093d393df3
/* Interface */
#define function updateHorseNumber(uint256) payable returns()

#define function readNumberOfHorses() view returns(uint256)

#define constant NUMBER_OF_HORSES_STORAGE_SLOT = FREE_STORAGE_POINTER()

#define macro MAIN() = takes (0) returns (0) {
    // Identify which function is being called.
    0x00 calldataload 0xE0 shr
    // __FUNC_SIG("updateHorseNumber(uint256)")
    // cast sig "updateHorseNumber(uint256)"
    // dup1 0xcdfead2e eq set jumpi
    dup1 __FUNC_SIG(updateHorseNumber) eq updateJump jumpi
    
    // __FUNC_SIG("readNumberOfHorses()")
    // cast sig "readNumberOfHorses()"
    dup1 __FUNC_SIG(readNumberOfHorses) eq readJump jumpi

    0x00 0x00 revert

    updateJump:
        SET_NUMBER_OF_HORSES()
    readJump:
        GET_NUMBER_OF_HORSES()
}

#define macro GET_NUMBER_OF_HORSES() = takes (0) returns (0) {
    // 1. Get the storage slot
    // 2. Load the value of that slot into memory
    // 3. Return
    [NUMBER_OF_HORSES_STORAGE_SLOT] // [key]
    sload                           //[value]
    0x00                            //[0, value]
    mstore                          //[]...........//Memory: [value]    
  
}


#define macro SET_NUMBER_OF_HORSES() = takes (0) returns (0) {
     // 2. Get the value to store from calldata
    0x04 calldataload
    
    // 1. Give it a storage slot
    [NUMBER_OF_HORSES_STORAGE_SLOT]
    
    // 3. sstore opcode
    sstore 
    stop
}
